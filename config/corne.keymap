/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        test_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
   &kp TAB  &kp Q  &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O          &kp P     &kp BSPC
&kp ESCAPE  &kp A  &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMICOLON    &kp COLON
 &kp LSHFT  &kp Z  &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT       &kp FSLH  &kp LC(ESC)
                          &kp LGUI  &sl 1  &kp SPACE    &kp RET  &sl 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
         &kp TAB          &kp N1      &kp N2               &kp N3               &kp N4               &kp N5        &kp N6             &kp N7        &kp N8     &kp N9         &kp N0    &kp BSPC
&kp LEFT_CONTROL  &kp LANGUAGE_5  &kp DELETE  &kp INTERNATIONAL_5  &kp INTERNATIONAL_4  &kp INTERNATIONAL_2      &kp LEFT           &kp DOWN        &kp UP  &kp RIGHT    &kp PAGE_UP  &kp INSERT
       &kp LSHFT          &trans      &trans               &trans               &trans               &trans    &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP     &trans  &kp PAGE_DOWN      &trans
                                                         &kp LGUI               &trans            &kp SPACE       &kp RET             &trans      &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TAB      &kp EXCL  &kp LS(DOUBLE_QUOTES)          &kp HASH  &kp DLLR     &kp PRCNT    &kp AMPERSAND  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS             &kp EQUAL   &kp BSPC
&bt BT_CLR   &kp AT_SIGN          &kp LESS_THAN  &kp GREATER_THAN  &kp PLUS  &kp ASTERISK        &kp MINUS         &kp EQUAL              &kp LBKT               &kp RBKT  &kp NON_US_BACKSLASH   &kp PIPE
     &mo 3  &bt BT_SEL 0           &bt BT_SEL 1      &bt BT_SEL 2    &trans        &trans        &kp UNDER          &kp PLUS              &kp LBRC               &kp RBRC          &kp QUESTION  &kp TILDE
                                                         &kp LGUI    &trans     &kp SPACE          &kp RET            &trans              &kp RALT
            >;
        };

        function_key {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp N9  &kp F10  &kp F11
  &none   &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &none
  &none   &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &none
                          &none   &none   &none     &none   &none   &none
            >;
        };
    };
};
