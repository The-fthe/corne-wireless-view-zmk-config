/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        LEFT_HRMs: LEFT_HRMs {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HRMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <100>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 41 39>;
            require-prior-idle-ms = <10>;
            hold-trigger-on-release;
        };

        LEFT_HAND_HRMs: LEFT_HAND_HRMs {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_HRMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 41 30 18 19 19 20 21 22 23 31 32 33 34 35 6 7 8 9 10 11 20>;
        };

        RIGHT_HAND_HRMs: RIGHT_HAND_HRMs {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_HRMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <124>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        LEFT_HAND_HRMs_FAST: LEFT_HAND_HRMs_FAST {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_HRMS_FAST";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
        };

        RIGHT_HAND_HRMs_FAST: RIGHT_HAND_HRMs_FAST {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_HRMS_FAST";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        top_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LEFT_WIN    &kp Q                       &kp W                       &kp E                              &kp R                    &kp T        &kp Y    &kp U                             &kp I                                &kp O                         &kp P                                 &kp BSPC
&kp ESC         &LEFT_HAND_HRMs LEFT_GUI A  &LEFT_HAND_HRMs LEFT_ALT S  &LEFT_HAND_HRMs_FAST LEFT_SHIFT D  &LEFT_HAND_HRMs LCTRL F  &kp G        &kp H    &RIGHT_HAND_HRMs RIGHT_CONTROL J  &RIGHT_HAND_HRMs_FAST RIGHT_SHIFT K  &RIGHT_HAND_HRMs RIGHT_ALT L  &RIGHT_HAND_HRMs RIGHT_GUI SEMICOLON  &lt 3 TAB
&kp LEFT_SHIFT  &kp Z                       &kp X                       &kp C                              &kp V                    &kp B        &kp N    &kp M                             &kp COMMA                            &kp DOT                       &kp FSLH                              &kp LEFT_ALT
                                                                        &kp LEFT_CONTROL                   &sl 2                    &kp SPACE    &kp RET  &sl 1                             &kp BACKSPACE
            >;
        };

        raise_layer_eng {
            bindings = <
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT     &kp AMPERSAND   &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE     &trans
&trans  &kp AT_SIGN      &kp BACKSLASH      &kp PIPE  &kp PLUS    &kp ASTERISK    &kp MINUS       &kp EQUAL         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE     &trans
&trans  &none            &none              &kp F11   &kp F12     &none           &kp UNDERSCORE  &kp CARET         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION  &trans
                                            &trans    &trans      &trans          &trans          &trans            &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2         &kp N3         &kp N4         &kp N5            &kp N6      &kp N7             &kp N8        &kp N9           &kp N0         &kp DELETE
&trans  &none   &kp LG(SPACE)  &kp LA(GRAVE)  &kp LC(SPACE)  &kp LC(INSERT)    &kp LEFT    &kp DOWN_ARROW     &kp UP_ARROW  &kp RIGHT        &kp PAGE_UP    &kp HOME
&trans  &trans  &none          &kp F11        &kp F12        &kp LS(INS)       &kp INSERT  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp PRINTSCREEN  &kp PAGE_DOWN  &kp END
                               &trans         &trans         &kp SPACE         &kp RET     &trans             &trans
            >;
        };

        function_key {
            bindings = <
&trans  &kp F1      &kp F2        &kp F3        &kp F4        &kp F5          &kp F6   &kp F7   &kp F8    &kp N9  &kp F10  &trans
&trans  &trans      &trans        &trans        &trans        &trans          &kp F11  &kp F12  &kp CAPS  &trans  &trans   &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &trans   &trans   &trans    &trans  &trans   &trans
                                  &trans        &trans        &trans          &trans   &trans   &trans
            >;
        };
    };
};
